# Goreleaser config for ahoy.
# Make sure to check the documentation at https://goreleaser.com
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
version: 2

env:
  - GO111MODULE=on
before:
  hooks:
    - cd v2 && go mod tidy

builds:
  - dir: v2
    binary: >-
      {{ .ProjectName }}-bin-
      {{- .Os }}-
      {{- .Arch }}
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
      - arm
    ignore:
      - goos: windows
        goarch: arm
    flags:
      - -trimpath
      - -v
    ldflags:
      - "-s -w -X main.version={{ .Tag }} -X main.GitCommit={{ .ShortCommit }} -X main.GitBranch={{ .Branch }} -X main.BuildTime={{ .Date }}"
    mod_timestamp: "{{ .CommitTimestamp }}"
    no_unique_dist_dir: true

archives:
  - formats: [ 'tar.gz' ]
    name_template: >-
      {{ .ProjectName }}-
      {{- .Os }}-
      {{- .Arch }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: [ 'zip' ]

checksum:
  name_template: "{{ .ProjectName }}_{{ .Version }}_checksums.txt"

snapshot:
  version_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

sboms:
  - artifacts: binary
    documents:
      - "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}.sbom"

signs:
  - cmd: gpg
    args:
      - "--batch"
      - "-u"
      - "{{ .Env.GPG_FINGERPRINT }}"
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"
    artifacts: checksum
    output: true

# release:
#   github:
#     owner: ahoy-cli
#     name: ahoy
#   draft: true
#   replace_existing_draft: true
#   mode: prepend
#   prerelease: auto
#   target_commitish: '{{ .ShortCommit }}'

# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
